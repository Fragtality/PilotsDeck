<Window x:Class="PilotsDeck.UI.ActionDesigner"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PilotsDeck.UI"
        mc:Ignorable="d"
        Title="ActionDesigner" MinHeight="800" MinWidth="1024" SizeToContent="WidthAndHeight" Closing="Window_Closing" Activated="Window_Activated" WindowState="Normal" Loaded="Window_Loaded">
    <Window.Resources>
        <local:TreeViewLineConverter x:Key="LineConverter"/>

        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <!--TreeViewItem-->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <!-- plus in -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                            <!-- Rectangle 9x9 pixels -->
                            <Rectangle Width="9" Height="9"  Stroke="#919191" SnapsToDevicePixels="true">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="Silver" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <!-- Vertical line inside rectangle -->
                            <Rectangle x:Name="ExpandPath" Width="1"   Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                            <!-- Horizontal line inside rectangle -->
                            <Rectangle Width="5" Height="1"  Stroke="Black" SnapsToDevicePixels="true"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="ExpandPath" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="GreenYellow" StrokeDashArray="1 2" Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <!-- Connecting dotted Lines -->
                            <!-- Horizontal line -->
                            <Rectangle x:Name="HorLn" Height="1" VerticalAlignment="Center" StrokeDashArray="4 4" HorizontalAlignment="Stretch" Stroke="#8888" Margin="9,0,0,0" SnapsToDevicePixels="True"/>
                            <!-- Vertical line -->
                            <Rectangle x:Name="VerLn" Width="1" VerticalAlignment="Stretch" StrokeDashArray="4 4" HorizontalAlignment="Center" Stroke="#8888" Grid.RowSpan="2" SnapsToDevicePixels="True"/>

                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded,
                              RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- This trigger changes the connecting lines if the item is the last in the list -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                <Setter TargetName="VerLn" Property="Height" Value="6"/>
                                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                            </DataTrigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility"  Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="16">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*" TextBlock.TextAlignment="Left"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="4*"/>
        </Grid.RowDefinitions>
        
        <!-- MENU -->
        <Grid Grid.Row="0" Grid.Column="0">
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Left" Margin="1,0,0,0">
                <Button Name="ButtonRemove" Width="32" Height="32" Click="ButtonRemove_Click">
                    <Image Source="Icons/trash.png" Width="28" Height="28"/>
                </Button>
            </StackPanel>
            
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Name="ButtonMoveUp" Width="32" Height="32" Click="ButtonMoveUp_Click" Margin="0,0,8,0">
                    <Image Source="Icons/caret-up-fill.png" Width="28" Height="28"/>
                </Button>
                <Button Name="ButtonMoveDown" Width="32" Height="32" Click="ButtonMoveDown_Click" Margin="8,0,8,0">
                    <Image Source="Icons/caret-down-fill.png" Width="28" Height="28"/>
                </Button>
                <Button Name="ButtonDuplicate" Width="32" Height="32" Click="ButtonDuplicate_Click" Margin="8,0,1,0">
                    <Image Source="Icons/copy.png" Width="28" Height="28"/>
                </Button>
            </StackPanel>
        </Grid>
        
        <Grid Grid.Row="0" Grid.Column="1">
            <StackPanel Grid.Column="1" Name="PanelSetTemplate" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Visible" Margin="12,0,0,0">
                <ComboBox Name="ComboTemplate" MinWidth="96" MinHeight="32" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="0,0,8,0"></ComboBox>
                <Button Name="ButtonSetTemplate" MinWidth="96" VerticalAlignment="Center" MinHeight="32" Click="ButtonSetTemplate_Click">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4,0,4,0">
                        <Label VerticalAlignment="Center" FontWeight="DemiBold">Template</Label>
                        <Image Source="Icons/box-arrow.png" Width="24" Height="24"/>
                    </StackPanel>
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="1" Name="PanelNewElement" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Collapsed" Margin="12,0,0,0">
                <ComboBox Name="ComboElement" MinWidth="96" MinHeight="32" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="0,0,8,0"></ComboBox>
                <Button Name="ButtonAddElement" MinWidth="96" VerticalAlignment="Center" Height="32" Click="ButtonAddElement_Click">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4,0,4,0">
                        <Label VerticalAlignment="Center" FontWeight="DemiBold">Element</Label>
                        <Image Source="Icons/plus-circle.png" Width="24" Height="24"/>
                    </StackPanel>
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="1" Name="PanelNewManipulator" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Collapsed" Margin="12,0,0,0">
                <ComboBox Name="ComboManipulator" MinWidth="96" MinHeight="32" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="0,0,8,0"></ComboBox>
                <Button Name="ButtonAddManipulator" MinWidth="96" VerticalAlignment="Center" Height="32" Click="ButtonAddManipulator_Click">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4,0,4,0">
                        <Label VerticalAlignment="Center" FontWeight="DemiBold">Manipulator</Label>
                        <Image Source="Icons/plus-circle.png" Width="24" Height="24"/>
                    </StackPanel>
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="1" Name="PanelNewCondition" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Collapsed" Margin="12,0,0,0">
                <Button Name="ButtonAddCondition" MinWidth="96" VerticalAlignment="Center" Height="32" Click="ButtonAddCondition_Click">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4,0,4,0">
                        <Label VerticalAlignment="Center" FontWeight="DemiBold">Condition</Label>
                        <Image Source="Icons/plus-circle.png" Width="24" Height="24"/>
                    </StackPanel>
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="1" Name="PanelNewCommand" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Collapsed" Margin="12,0,0,0">
                <Button Name="ButtonAddCommand" MinWidth="96" VerticalAlignment="Center" Height="32" Click="ButtonAddCommand_Click">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4,0,4,0">
                        <Label VerticalAlignment="Center" FontWeight="DemiBold">Command</Label>
                        <Image Source="Icons/plus-circle.png" Width="24" Height="24"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>


        <!-- ELEMENTS / COMMANDS -->
        <TreeView Grid.Row="1" Grid.Column="0" Name="ElementTree" SelectedItemChanged="ElementTree_SelectedItemChanged" Margin="0,16,0,0">
            
        </TreeView>

        <!-- ITEM VIEW -->
        <ScrollViewer Grid.Row="1" Grid.Column="1" Name="ElementView" Margin="0,16,0,0" CanContentScroll="True" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

        </ScrollViewer>
    </Grid>
</Window>
