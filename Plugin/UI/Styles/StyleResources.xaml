<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:conv="clr-namespace:CFIT.AppFramework.UI.ValueConverter;assembly=CFIT.AppFramework">
    
    <conv:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
    <conv:DrawingColorConverter x:Key="DrawingColorConverter"/>
    <conv:MediaColorConverter x:Key="MediaColorConverter"/>
    <conv:StringColorConverter x:Key="StringColorConverter"/>

    <Style TargetType="{x:Type ContentPresenter}">
        <Setter Property="RecognizesAccessKey" Value="False" />
    </Style>


    <Style x:Key="TreeHeaderLabel" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Margin" Value="6,0,0,0" />
    </Style>

    <Style x:Key="TreeHeaderImage" TargetType="Image">
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="8,0,0,0" />
    </Style>

    <Style x:Key="TreeBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{x:Static SystemColors.ActiveBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="TreeHeaderPanel" TargetType="DockPanel">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="DockPanel.Dock" Value="Top" />
    </Style>

    <Style TargetType="Label" x:Key="DesignerLabel" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="MinHeight" Value="24" />
    </Style>
    <Style TargetType="Label" x:Key="DesignerLabelM8" BasedOn="{StaticResource DesignerLabel}">
        <Setter Property="Margin" Value="0,8,0,0" />
    </Style>
    <Style TargetType="Label" x:Key="DesignerLabelTop" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="MinHeight" Value="24" />
    </Style>

    <Style TargetType="Label" x:Key="LabelDefault" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="24" />
    </Style>
    <Style TargetType="Label" x:Key="LabelDemiBold" BasedOn="{StaticResource LabelDefault}">
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>
    <Style TargetType="Label" x:Key="LabelDefaultLeft" BasedOn="{StaticResource LabelDefault}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>
    <Style TargetType="Label" x:Key="LabelColorSelect" BasedOn="{StaticResource LabelDefault}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="10" />
    </Style>
    <Style TargetType="Label" x:Key="LabelAnnotation" BasedOn="{StaticResource LabelDefault}">
        <Setter Property="Margin" Value="4,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style TargetType="Label" x:Key="LabelListView" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style TargetType="TextBox" x:Key="InputCentered" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="64" />
        <Setter Property="MinHeight" Value="24" />
    </Style>
    <Style TargetType="TextBox" x:Key="InputLeft" BasedOn="{StaticResource InputCentered}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>
    <Style TargetType="TextBox" x:Key="InputCenteredLeft" BasedOn="{StaticResource InputCentered}">
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="Button" x:Key="BtnSquareSmall" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style TargetType="Image" x:Key="ImgSquareSmall">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style TargetType="ColumnDefinition" x:Key="DesignerLabelColumn">
        <Setter Property="TextBlock.HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="124" />
    </Style>
    <Style TargetType="ColumnDefinition" x:Key="DesignerControlColumn">
        <Setter Property="Width" Value="4*" />
    </Style>

    <Style TargetType="CheckBox" x:Key="CheckboxDefault" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MinHeight" Value="24" />
    </Style>

    <Style TargetType="ComboBox" x:Key="ComboboxDefault">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MinHeight" Value="24" />
    </Style>

    <ControlTemplate x:Key="ThinScrollBar" TargetType="ScrollBar">
        <Track x:Name="PART_Track" Width="4" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
            <Track.Thumb>
                <Thumb>
                    <Thumb.Style>
                        <Style TargetType="{x:Type Thumb}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Grid>
                                            <Border x:Name="thumb" BorderThickness="0" Background="Gray" Height="{TemplateBinding Height}" Width="4"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Thumb.Style>
                </Thumb>
            </Track.Thumb>
        </Track>
    </ControlTemplate>

    <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">4</system:Double>
    <Style TargetType="ScrollBar" BasedOn="{StaticResource {x:Type ScrollBar}}">
        <Setter Property="Width" Value="4"/>
        <Setter Property="Template" Value="{StaticResource ThinScrollBar}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.9" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>